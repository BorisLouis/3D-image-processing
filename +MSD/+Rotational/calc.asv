function [MSD,Dgamma] = calc(coord, tau, expTime)

    dim = size(coord,2);
    
    switch dim
        case 1
            coord(:,2) = 0;
        case 2        
        otherwise
            error('unexpected dimension for the vector')
    end
    
    MSAD = zeros(size(coord,1)-1,1);
    %Calculate mean-square-displacement
    maxIdx = round((max(tau)-min(tau))/expTime);
    DthetaMatrix = cell(maxIdx, 1);
    DphiMatrix = cell(maxIdx, 1);
    for i = 1:size(coord,1)-1
        
        stp = i;
        cnt =  1;
        Dr  = [];
        
        while cnt<=stp && cnt+stp<=size(coord,1)
            
            idx = cnt:stp:size(coord,1);
            SelectTheta = coord(idx,1).';
            SelectPhit = coord(idx,1).';
            Dtau = diff(tau(1,idx).');

            for z = 1:size(SelectTheta, 2)-1
                theta1 = SelectTheta(z+1);
                theta2 = SelectTheta(z);
                Dtheta(z) = mod(theta2 - theta1 + pi, 2*pi) - pi;
            end

            for z = 1:size(SelectPhi, 2)-1
                Phi1 = SelectPhi(z+1);
                Phi2 = SelectPhi(z);
                DPhi(z) = mod(Phi2 - Phi1 + pi, 2*pi) - pi;
            end
            for z = 1:size(Dtau, 1)
                Idx = round(Dtau(z,1) ./ expTime);
                DthetaMatrix{Idx, 1} = [DthetaMatrix{Idx, 1}, Dtheta(1,z)];
                DphiMatrix{Idx,1} = [DphiMatrix{Idx,1}, Dphi(1,z)];
            end
            cnt = cnt + 1;
        end
    end
    
    for i = 1:size(DthetaMatrix, 1)
        DsTheta = DthetaMatrix{i,1};
        DsPhi = DphiMatrix{i,1};
        Timelag(i) = i*expTime;

        gamma = [];
        for a = 1:size(DsTheta, 2)
            r1 = [cos(DsPhi(a)) .* cos(DsTheta(a)), cos(DsPhi(a)) .* sin(DsTheta(a)), sin(DsPhi(a))];
            r2 = [cos(0) .* cos(0), cos(0) .* sin(0), sin(0)];
            cos_gamma = dot(r1, r2);
            Dr = max(-1, min(1, cos_gamma));
            gamma(a) = acos(Dr);
        end

        Dgamma = [];
        if ~isempty(gamma)
            Dgamma = gamma(~isnan(gamma));
            if ~isempty(Dgamma)
                unitVectors = [cos(Dgamma); sin(Dgamma)];
                meanVector = mean(unitVectors, 2);
                meanAngle = atan2(meanVector(2), meanVector(1));
                MSAD(i) = meanAngle;
            else
                MSAD(i) = NaN;
            end
        else
            MSAD(i) = NaN;
        end
    end
    
    MSD = [MSAD'; Timelag];
end
